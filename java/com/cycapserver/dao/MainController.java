package com.cycapserver.dao;


import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Controller;
//import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cycapserver.model.User;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)

public class MainController {
	// This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	@Autowired 
	private UserRepository userRepository;
	
	
	@GetMapping(path="/register") // Map ONLY GET Requests
	@RequestMapping(value = "{register}")
	public @ResponseBody String addNewUser (@RequestParam String username,
			@RequestParam String userpassword, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setUserId(username);
		n.setPassword(userpassword);
		n.setEmail(email);
		n.setDateOfCreation();
		userRepository.save(n);
		return "Saved";
	}
	
    @PostMapping("/register")
    public String registerSubmit(@ModelAttribute User register) {
		return "result";
    }
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}